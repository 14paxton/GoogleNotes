{
	"info": {
		"_postman_id": "60a468e9-864e-4432-a98f-85e2077aeeee",
		"name": "GetVersions",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "25515917"
	},
	"item": [
		{
			"name": "1-BrandonDevBot-ListAllFlows",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"\r",
							"\r",
							"pm.test(\"ListAllFlows\", function () {\r",
							"    let fList = [];\r",
							"    var jsonData = pm.response.json();\r",
							"    let flows = jsonData.flows.map(u => u?.name);\r",
							"\r",
							"    console.log(\"flows\", flows);\r",
							"        pm.expect(jsonData.flows.length).to.be.greaterThan(1);\r",
							"        pm.collectionVariables.set(\"flowList\", flows);\r",
							"    pm.globals.set(\"flowList\", flows);\r",
							"});\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "https://dialogflow.googleapis.com/v3beta1/projects/vcu-virtual-assistant-bot/locations/global/agents/8ec51540-2933-43d6-aad5-355545059bfe/flows",
					"protocol": "https",
					"host": [
						"dialogflow",
						"googleapis",
						"com"
					],
					"path": [
						"v3beta1",
						"projects",
						"vcu-virtual-assistant-bot",
						"locations",
						"global",
						"agents",
						"8ec51540-2933-43d6-aad5-355545059bfe",
						"flows"
					]
				}
			},
			"response": []
		},
		{
			"name": "2-BrandonDevBot-GetAllVersions-AllFlows",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"const flowList = pm.collectionVariables.get(\"flowList\");\r",
							"const flowName = pm.variables.get(\"flowName\");\r",
							"const flowVersionMap = pm.collectionVariables.get(\"flowVersionMap\");\r",
							"\r",
							"if (flowList && flowList.length > 0){\r",
							"    postman.setNextRequest(\"2-BrandonDevBot-GetAllVersions-AllFlows\");\r",
							"} else {\r",
							"    const jsonFlowVersions = JSON.stringify(flowVersionMap);\r",
							"    const finalList = JSON.parse(jsonFlowVersions);\r",
							"    console.log(\"flowVersionMap\", finalList);\r",
							"\r",
							"    pm.collectionVariables.set(\"finalList\", jsonFlowVersions)\r",
							"    pm.variables.unset(\"flowName\")\r",
							"    pm.variables.unset(\"flowVersionMap\")\r",
							"    pm.variables.unset(\"flowList\");\r",
							"    \r",
							"    postman.setNextRequest(null);\r",
							"}\r",
							"\r",
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"\r",
							"    const versionList = pm.response.json().versions;\r",
							"    flowVersionMap[flowName] = versionList\r",
							"    pm.variables.set(\"flowVersionMap\", flowVersionMap);\r",
							"});\r",
							""
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"const flowList = pm.collectionVariables.get(\"flowList\");\r",
							"\r",
							"if(flowList || flowList.length > 0) {\r",
							"    let currentFlowName = flowList.shift();\r",
							"    pm.variables.set(\"flowName\", currentFlowName);\r",
							"    pm.collectionVariables.set(\"flowList\", flowList)\r",
							"\r",
							"    const flowVersionMap =  pm.variables.get(\"flowVersionMap\") ? pm.variables.get(\"flowVersionMap\") : new Map();\r",
							"    flowVersionMap[currentFlowName] = \"\";\r",
							"\r",
							"    pm.collectionVariables.set(\"flowVersionMap\", flowVersionMap);\r",
							"}\r",
							"\r",
							"\r",
							"\r",
							"\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "https://dialogflow.googleapis.com/v3beta1/{{flowName}}/versions",
					"protocol": "https",
					"host": [
						"dialogflow",
						"googleapis",
						"com"
					],
					"path": [
						"v3beta1",
						"{{flowName}}",
						"versions"
					]
				}
			},
			"response": []
		}
	],
	"auth": {
		"type": "bearer",
		"bearer": [
			{
				"key": "token",
				"value": "{{token}}",
				"type": "string"
			}
		]
	},
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "token",
			"value": "",
			"type": "string"
		},
		{
			"key": "flowList",
			"value": ""
		},
		{
			"key": "flowName",
			"value": ""
		},
		{
			"key": "flowVersionMap",
			"value": "",
			"type": "string"
		},
		{
			"key": "finalList",
			"value": ""
		}
	]
}